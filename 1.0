import pygame
pygame.init()
from pygame import *


game = True

class GameSprite():
#конструктор класса
    def __init__(self, player_image, player_x, player_y, size_x, size_y, player_speed):
      #вызываем конструктор класса (Sprite):
      #sprite.Sprite.__init__(self)
      #каждый спрайт должен хранить свойство image - изображение
        self.image = transform.scale(image.load(player_image), (size_x, size_y))
        self.speed = player_speed
        #каждый спрайт должен хранить свойство rect - прямоугольник, в который он вписан
        self.rect = self.image.get_rect()
        self.rect.x = player_x
        self.rect.y = player_y
#метод, отрисовывающий героя на окне
    def reset(self):
        window.blit(self.image, (self.rect.x, self.rect.y))
#класс главного игрока
class Player(GameSprite):
  #метод для управления спрайтом стрелками клавиатуры
    def update_r(self):
        keys = key.get_pressed()
        if keys[K_w] and self.rect.y > 5:
            self.rect.y -= self.speed
        if keys[K_s] and self.rect.y < 450:
            self.rect.y += self.speed
    
    def update_l(self):
        keys = key.get_pressed()
        if keys[K_UP] and self.rect.y > 5:
            self.rect.y -= self.speed
        if keys[K_DOWN] and self.rect.y < 450:
            self.rect.y += self.speed

player_1 = Player("platform.png", 100, 250, 100, 500, 3)
player_2 = Player("platform.png", 400, 250, 100, 500, 3)
ball = GameSprite("ball.png", 250, 250, 400, 400, 4)

window = display.set_mode((500, 500))
window.fill((200, 255, 255))
clock = time.Clock()

while game:
    window.fill((200, 255, 255))
    player_2.reset()
    player_2.update_l()
    player_1.reset()
    player_1.update_r()
    ball.reset()

    clock.tick(40)
    display.update()
